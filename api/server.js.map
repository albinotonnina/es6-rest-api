{"version":3,"sources":["../src/server.js"],"names":["require","config","app","server","createServer","use","exposedHeaders","corsHeaders","json","limit","bodyLimit","disable","set","engine","__express","static","join","__dirname","urlencoded","extended","db","listen","process","env","PORT","port","console","log","address"],"mappings":";;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAVAA,QAAQ,QAAR,EAAkBC,MAAlB;;AAYA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAa,eAAKC,YAAL,CAAkBF,GAAlB,CAAb;;AAEA;AACAA,IAAIG,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB,iBAAOC;AADd,CAAL,CAAR;;AAIAL,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,CAAgB;AACpBC,WAAO,iBAAOC;AADM,CAAhB,CAAR;;AAIAR,IAAIS,OAAJ,CAAY,cAAZ;AACAT,IAAIU,GAAJ,CAAQ,aAAR,EAAuB,YAAvB;AACAV,IAAIW,MAAJ,CAAW,YAAX,EAAyBb,QAAQ,KAAR,EAAec,SAAxC;AACAZ,IAAIG,GAAJ,CAAQ,SAAR,EAAmB,kBAAQU,MAAR,CAAe,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAnB;AACAf,IAAIG,GAAJ,CAAQ,qBAAWG,IAAX,EAAR,E,CAA4B;AAC5BN,IAAIG,GAAJ,CAAQ,qBAAWa,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR,E,CAAoD;;;AAGpD;AACA,kBAAa,cAAM;;AAGf;AACAjB,QAAIG,GAAJ,CAAQ,0BAAW,EAACJ,wBAAD,EAASmB,MAAT,EAAX,CAAR;;AAEJ;AACA;AACA;AACA;;AAEI;AACA;AACAlB,QAAIG,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAACJ,wBAAD,EAASmB,MAAT,EAAJ,CAAhB;AACA;AACAlB,QAAIC,MAAJ,CAAWkB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,iBAAOC,IAA7C;AACA;AACAC,YAAQC,GAAR,sBAA+BzB,IAAIC,MAAJ,CAAWyB,OAAX,GAAqBH,IAApD;AACH,CAlBD;;kBAoBevB,G;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"server.js","sourcesContent":["require('dotenv').config();\n\nimport http from 'http';\nimport express from 'express';\nimport path from 'path';\nimport cors from 'cors';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// 3rd party middleware\napp.use(cors({\n    exposedHeaders: config.corsHeaders\n}));\n\napp.use(bodyParser.json({\n    limit: config.bodyLimit\n}));\n\napp.disable(\"x-powered-by\");\napp.set('view engine', 'handlebars');\napp.engine('handlebars', require('hbs').__express);\napp.use('/assets', express.static(path.join(__dirname, '../assets')));\napp.use(bodyParser.json()); // for parsing application/json\napp.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded\n\n\n// connect to db\ninitializeDb(db => {\n\n\n    // // internal middleware\n    app.use(middleware({config, db}));\n\n//     app.use('/', require('./homedoc'));\n// app.use('/getset', require('./getset'));\n// app.use('/scrape', require('./scraper'));\n//\n\n    //\n    // // api router\n    app.use('/api', api({config, db}));\n    //\n    app.server.listen(process.env.PORT || config.port);\n    //\n    console.log(`Started on port ${app.server.address().port}`);\n});\n\nexport default app;\n\n//\n//\n//\n// var express = require(\"express\");\n// var path = require(\"path\");\n// var bodyParser = require(\"body-parser\");\n// var mongodb = require(\"mongodb\");\n//\n// var app = express();\n// var db;\n//\n//\n// app.disable(\"x-powered-by\");\n// app.set('view engine', 'handlebars');\n// app.engine('handlebars', require('hbs').__express);\n//\n// app.use(function(req,res,next){\n//     req.db = db;\n//     next();\n// });\n//\n// app.use(bodyParser.json()); // for parsing application/json\n// app.use(bodyParser.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded\n//\n//\n// app.use('/', require('./homedoc'));\n// app.use('/getset', require('./getset'));\n// app.use('/scrape', require('./scraper'));\n// app.use('/assets', express.static(path.join(__dirname, '../assets')));\n//\n// mongodb.MongoClient.connect(process.env.MONGODB_URI, function (err, database) {\n//     if (err) {\n//         console.log(err);\n//         process.exit(1);\n//     }\n//\n//     // Save database object from the callback for reuse.\n//     db = database;\n//     console.log(\"Database connection ready\");\n//\n//\n//     // Initialize the app.\n//     var server = app.listen(process.env.PORT || 3000, function () {\n//         var port = server.address().port;\n//         console.log(\"App now running on port\", port);\n//     });\n// });\n"]}