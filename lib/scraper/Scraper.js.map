{"version":3,"sources":["../../src/scraper/Scraper.js"],"names":["request","require","cheerio","rp","Scraper","url","rpOptions","uri","simple","transform","body","load","Promise","resolve","then","$","pages","Number","not","last","text","pagePromises","i","push","getExercisesForPage","all","exercisesUrls","values","reduce","a","b","concat","scrapeExercises","pageNum","reject","pageExercisesUrls","each","find","attr","catch","exerciseUrls","exercisePromises","length","scrapeExercise","exerciseUrl","grabExerciseData","exerciseObject","title","getExerciseTitle","description","getExerciseDescription","taxonomies","getExerciseTaxonomies","steps","getExerciseSteps","children","first","texonomies","index","element","splitFields","replace","split"],"mappings":"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","file":"Scraper.js","sourcesContent":["var request = require('request');\nvar cheerio = require('cheerio');\nvar rp = require('request-promise');\n\n\nexport class Scraper {\n\n    constructor() {\n        this.url = 'http://db.everkinetic.com';\n\n        this.rpOptions = {\n            uri: this.url,\n            simple: true,\n            transform: function (body) {\n                return cheerio.load(body);\n            }\n        };\n    }\n\n\n    getTotalPages() {\n        return new Promise((resolve) => {\n            rp(this.rpOptions)\n                .then(($) => {\n                    resolve({\n                        pages: Number($('.page-numbers').not('.next').last().text())\n                    });\n                })\n        });\n\n    }\n\n    getPagesExercises(pages) {\n\n        let pagePromises = [];\n\n\n        for (let i = 0; i < pages; i++) {\n            pagePromises.push(this.getExercisesForPage(i))\n        }\n\n        return Promise.all(pagePromises).then(values => {\n            const exercisesUrls = values.reduce((a, b) => a.concat(b), []);\n            return this.scrapeExercises(exercisesUrls);\n        });\n\n    }\n\n\n    getExercisesForPage(pageNum) {\n\n        this.rpOptions.url = `${this.url}/page/${pageNum}`;\n\n        return new Promise((resolve, reject) => {\n            rp(this.rpOptions)\n                .then(($) => {\n                    let pageExercisesUrls = [];\n                    $('article').each(function (i) {\n                        pageExercisesUrls[i] = $(this).find('h3').find('a').attr('href');\n                    });\n                    resolve(pageExercisesUrls);\n                })\n                .catch(function () {\n                    reject()\n                });\n\n        });\n\n    }\n\n    scrapeExercises(exerciseUrls) {\n        let exercisePromises = [];\n\n        for (let i = 0; i < exerciseUrls.length; i++) {\n            exercisePromises.push(this.scrapeExercise(exerciseUrls[i]));\n        }\n\n        return Promise.all(exercisePromises).then(values => {\n            return values;\n        });\n\n    }\n\n    scrapeExercise(exerciseUrl) {\n        return new Promise((resolve, reject) => {\n            rp({\n                uri: exerciseUrl,\n                transform: function (body) {\n                    return cheerio.load(body);\n                }\n            })\n                .then(($) => {\n                    resolve(this.grabExerciseData($));\n                })\n                .catch(function () {\n                    reject()\n                });\n        });\n    }\n\n    grabExerciseData($) {\n        const exerciseObject = {};\n\n        exerciseObject.title = this.getExerciseTitle($);\n        exerciseObject.description = this.getExerciseDescription($);\n        exerciseObject.taxonomies = this.getExerciseTaxonomies($);\n        exerciseObject.steps = this.getExerciseSteps($);\n\n        return exerciseObject;\n    }\n\n    getExerciseTitle($) {\n        return $('.entry-title').find('a').text();\n    }\n\n    getExerciseDescription($) {\n        return $('.exercise-entry-content').children().first().text();\n    }\n\n    getExerciseTaxonomies($) {\n        const texonomies = {};\n\n        $('.exercise-taxonomies').children().each((index, element) => {\n            const splitFields = $(element).find('a').attr('href').replace(`${this.url}/`, '').split('/');\n            texonomies[splitFields[0]] = splitFields[1];\n        });\n\n        return texonomies;\n    }\n\n    getExerciseSteps($) {\n\n        let steps = [];\n\n        $('.exercise-entry-content').find('ol').children().each((index, element) => {\n            steps.push($(element).text())\n        });\n\n        return steps;\n    }\n\n\n}\n"]}