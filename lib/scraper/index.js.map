{"version":3,"sources":["../../src/scraper/index.js"],"names":["router","require","Router","mergeParams","request","cheerio","fs","module","exports","get","req","res","scraperObj","console","log","url","error","response","html","$","load","title","release","rating","json","filter","data","children","first","text","trim","last","writeFile","JSON","stringify","err","send"],"mappings":";;AAKA;;AALA,IAAIA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,CAA0B,EAAEC,aAAa,IAAf,EAA1B,CAAb;AACA,IAAIC,UAAUH,QAAQ,SAAR,CAAd;AACA,IAAII,UAAUJ,QAAQ,SAAR,CAAd;AACA,IAAIK,KAAKL,QAAQ,IAAR,CAAT;;AAIAM,OAAOC,OAAP,GAAiBR,MAAjB;;AAEAA,OAAOS,GAAP,CAAW,GAAX,EAAgB,UAASC,GAAT,EAAcC,GAAd,EAAmB;;AAE/B,QAAMC,aAAa,sBAAnB;;AAEAC,YAAQC,GAAR,CAAYF,UAAZ;;AAEA;AACA,QAAIG,MAAM,sCAAV;;AAEAX,YAAQW,GAAR,EAAa,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC1C,YAAI,CAACF,KAAL,EAAY;AACR,gBAAIG,IAAId,QAAQe,IAAR,CAAaF,IAAb,CAAR;;AAEA,gBAAIG,KAAJ,EAAWC,OAAX,EAAoBC,MAApB;AACA,gBAAIC,OAAO,EAACH,OAAO,EAAR,EAAYC,SAAS,EAArB,EAAyBC,QAAQ,EAAjC,EAAX;;AAEAJ,cAAE,gBAAF,EAAoBM,MAApB,CAA2B,YAAY;AACnC,oBAAIC,OAAOP,EAAE,IAAF,CAAX;AACAE,wBAAQK,KAAKC,QAAL,GAAgBC,KAAhB,GAAwBC,IAAxB,GAA+BC,IAA/B,EAAR;AACAR,0BAAUI,KAAKC,QAAL,GAAgBI,IAAhB,GAAuBJ,QAAvB,GAAkCI,IAAlC,GAAyCF,IAAzC,GAAgDC,IAAhD,EAAV;;AAEAN,qBAAKH,KAAL,GAAaA,KAAb;AACAG,qBAAKF,OAAL,GAAeA,OAAf;AACH,aAPD;;AASAH,cAAE,cAAF,EAAkBM,MAAlB,CAAyB,YAAY;AACjC,oBAAIC,OAAOP,EAAE,IAAF,CAAX;AACAI,yBAASG,KAAKG,IAAL,GAAYC,IAAZ,EAAT;;AAEAN,qBAAKD,MAAL,GAAcA,MAAd;AACH,aALD;AAMH;;AAEDjB,WAAG0B,SAAH,CAAa,aAAb,EAA4BC,KAAKC,SAAL,CAAeV,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAA5B,EAA2D,UAAUW,GAAV,EAAe;AACtEtB,oBAAQC,GAAR,CAAY,oFAAZ,EAAiGqB,GAAjG;AACH,SAFD;;AAIA,eAAOxB,IAAIyB,IAAJ,CAAS,qBAAT,CAAP;AACH,KA7BD;;AA+BA,WAAO,KAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAzDD","file":"index.js","sourcesContent":["var router = require('express').Router({ mergeParams: true });\nvar request = require('request');\nvar cheerio = require('cheerio');\nvar fs = require('fs');\n\nimport {Scraper} from './Scraper'\n\nmodule.exports = router;\n\nrouter.get('/', function(req, res) {\n\n    const scraperObj = new Scraper();\n\n    console.log(scraperObj);\n\n    // Let's scrape Anchorman 2\n    let url = 'http://www.imdb.com/title/tt1229340/';\n\n    request(url, function (error, response, html) {\n        if (!error) {\n            var $ = cheerio.load(html);\n\n            var title, release, rating;\n            var json = {title: \"\", release: \"\", rating: \"\"};\n\n            $('.title_wrapper').filter(function () {\n                var data = $(this);\n                title = data.children().first().text().trim();\n                release = data.children().last().children().last().text().trim();\n\n                json.title = title;\n                json.release = release;\n            });\n\n            $('.ratingValue').filter(function () {\n                var data = $(this);\n                rating = data.text().trim();\n\n                json.rating = rating;\n            })\n        }\n\n        fs.writeFile('output.json', JSON.stringify(json, null, 4), function (err) {\n            console.log('File successfully written! - Check your project directory for the output.json file',err);\n        });\n\n        return res.send('Check your console!')\n    })\n\n    return false;\n    //\n    // var context = {};\n    // context.layout = null;\n    //\n    // context.title = \"API Response Home Document\";\n    // context.external_api_url = \"http://api.froyo.io\";\n    //\n    // context.base_url = require(\"config\").app.base_url || req.protocol + \"://\" + req.headers.host;\n    //\n    //\n    // var template = __dirname + '/views/homedoc';\n    //\n    // res.set('Content-Type', 'application/vnd.uber+json');\n    //\n    // return res.status(200).render(template, context);\n\n});\n"]}